name: All Jobs Completed

on:
  workflow_dispatch:
    inputs:
      run_job_five:
        description: Whether to run or not
        required: false
        default: "false"
        type: string

env:
  RUN_JOB_FIVE: 'false'

jobs:
  job-one:
    runs-on: ubuntu-latest
    steps:
      - name: Job One Step One
        run: |
          echo Run Job One Step One
  
  job-two:
    runs-on: ubuntu-latest
    steps:
      - name: Job Two Step One
        run: |
          echo Run Two One Step One

  job-three:
    runs-on: ubuntu-latest
    steps:
      - name: Job Three Step One
        run: |
          exit 1

  job-four:
    runs-on: ubuntu-latest
    steps:
      - name: Job Four Step One
        run: |
          echo Run Four One Step One

  job-five:
    if: ${{ inputs.run_job_five == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Job Five Step One
        run: |
          echo Run Five One Step One

  wait-for-all:
    name: All jobs completed
    runs-on: ubuntu-latest
    if: always()
    needs:
      - job-one
      - job-two
      - job-three
      - job-four
      - job-five
    steps:
      - run: |
          export jobs_failed=0
          declare -A job_results=(
            [job-one]="${{ needs.job-one.result }}"
            [job-two]="${{ needs.job-two.result }}"
            [job-three]="${{ needs.job-three.result }}"
            [job-four]="${{ needs.job-four.result }}"
            [job-five]="${{ needs.job-five.result }}"
          )

          # for job_result in ${job_results[@]}
          # do
          #   if [[ ${job_result} == 'failure' ]]
          #   then
          #     echo "Job failed"
          #     # ((jobs_failed++))
          #   fi
          # done

          ((jobs_failed++))

          echo Failed jobs: ${jobs_failed}

          # # Fail if there is failed job
          # if [[ ${jobs_failed} -ne 0 ]]
          # then
          #   exit 1
          # fi
